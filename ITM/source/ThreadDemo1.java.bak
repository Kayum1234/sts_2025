/*
   Multi-Threading:
   ----------------
   Introduction
      Multi-tasking
	  How to acheive multi-tasking
	     |-Multi-Threading
	 What is Thread??
	 Defining , instantiating and creating a Thread
	    |-By extending Thread class
		|-By implementing Runnable interface
		|-By using AIC
		|-By using AII
		|-By using Lambda expression
	 Setting and getting name of a Thread
	 Getting and setting Thread priority
	 Daemon Thread
	 Synchronization
	   |-class level
	   |-Object level
	   |-method level
	 methods to prevent Thread execution
	   yield()
	   join()
	   sleep()
	 Interthread communication using
	   wait
	   notify
	   notifyAll
	   
	   ================================================
	   
	  
	   class
	     |-data
		 |-methods
		 
		 java library--->packages--->
		    java.lang
			  |-Runnable (I)
			  |-Thread (C)
			  
			  Defining Thread by exteding Thread class
			  ========================================
			  Case-1:
			  Case-2:
			  Case-3:
			  Case-4:
			  Case-5:
			  case-6:
			  Case-7:
			  Case-8:
			  
*/

class MyThread1 extends Thread{

    public void run() {
		for (int i=0;i<=10 ;i++ )
		{
			 System.out.println("samosha chhano::"+Thread.currentThread().getName());
		}
    }
	
}

class MyThread extends Thread{

    public void run() {
		for (int i=0;i<=10 ;i++ )
		{
			 System.out.println("samosa bnao ::"+Thread.currentThread().getName());
		}
    }
	
}
class ThreadDemo1
{
	public static void main(String[]  args){
		MyThread  obj=new MyThread();
		Thread  t1=new Thread();
		t1.start();
		//MyThread1  obj1=new MyThread1();
		//obj.start();
		//obj1.start();
		//obj.start();
	   for (int i=0;i<=10 ;i++ )
		{
			 System.out.println("This is main thread task ::"+Thread.currentThread().getName());
		}
	}
}

